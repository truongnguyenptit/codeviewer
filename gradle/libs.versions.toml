[versions]
kotlin = "1.8.10"
ktLint = "10.3.0"
detekt = "1.19.0"
dateTime = "0.4.0"
multiplatformSettings = "0.9"
atomicfu = "0.18.3"
uuid = "0.5.0"
ktor = "2.2.4"
sqldelight = "1.5.5"
koin = "3.3.3"

#Touchlab
stately = "1.2.2"
korio = "3.3.1"
kermit = "1.1.3"
hyperdrive = "0.1.139"

# Kotlin Multiplatform Version
kotlinxCoroutines = "1.6.4"

[plugins]
ktLint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktLint" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }

multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
nativeCocoapod = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
android-kotlin = { id = "org.jetbrains.kotlin.android", version = "kotlin" }
kotlinX-serialization-plugin = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

[libraries]
#Kotlin Multiplatform Lib Dependencies
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "dateTime" }
atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "atomicfu" }

#
multiplatformSettings-core = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
multiplatformSettings-test = { module = "com.russhwolf:multiplatform-settings-test", version.ref = "multiplatformSettings" }

#ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-json = { module = "io.ktor:ktor-client-json", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-ios = { module = "io.ktor:ktor-client-ios", version.ref = "ktor" }

#sqldelight
sqldelight-runtime = { module = "com.squareup.sqldelight:runtime", version.ref = "sqldelight" }
sqldelight-coroutines = { module = "com.squareup.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
sqldelight-driver-ios = { module = "com.squareup.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-driver-android = { module = "com.squareup.sqldelight:android-driver", version.ref = "sqldelight" }

#koin
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }

#https://github.com/touchlab/Stately
stately-common = { module = "co.touchlab:stately-common", version.ref = "stately" }
#https://github.com/korlibs/korge/tree/main/korio
korio = { module = "com.soywiz.korlibs.korio:korio", version.ref = "korio" }
#https://github.com/touchlab/Kermit
kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
#https://touchlab.co/kermit-and-crashlytics/
kermit-crashlytics = { module = "co.touchlab:kermit-crashlytics", version.ref = "kermit" }

hyperdrive-multiplatformx-api = { module = "org.brightify.hyperdrive:multiplatformx-api", version.ref = "hyperdrive" }
hyperdrive-multiplatformx-compose = { module = "org.brightify.hyperdrive:multiplatformx-compose", version.ref = "hyperdrive" }


uuid = { module = "com.benasher44:uuid", version.ref = "uuid" }

[bundles]
ktor-common = ["ktor-client-core", "ktor-client-json", "ktor-client-logging", "ktor-client-serialization"]
sqldelight-common = ["sqldelight-runtime", "sqldelight-coroutines"]